#!/bin/bash

# Usage:
#	radio [RADIO]
# 	radio list

CONFIG=$HOME/.radio


if [ ! -e $CONFIG ]; then
	echo "Create a config at $CONFIG"
	exit 2
fi

function list_radios() {
	grep -v "^#\|^$" $CONFIG | awk -F ':' '{print $1}' | sort
}


# Handle the non-playback commands before autodetecting playback
if [ "$1" == "list" ] || [ "$1" == "" ]; then
	list_radios
	exit
fi

# Use mpc/mpd by default, but pickup chromecast if CAST_DEVICE env var is set
function has_mplayer() {
	which mplayer > /dev/null
	return $?
}
if [ "$CAST_DEVICE" != "" ]; then
	method="cast"
elif [ "$MPD_HOST" != "" ]; then
	method="mpc"
elif has_mplayer; then
	method="mplayer"
else
	method="mpc" # fallback
fi


function find_radio_url() {
	url=$(grep -v "^#" $CONFIG | grep $1 | cut -d ':' -f 2- | tr -d '\t ')
	echo $url
}

#####################################################
## MPD METHODS
#####################################################
function mpc_play() {
	url=$(find_radio_url $1)
	if [ "$url" == "" ]; then
		echo "No URL found"
		exit 1
	fi
	mpc clear
	if [[ $url == *.pls* ]]; then
		mpc load "$url"
	else
		mpc add "$url"
	fi
	mpc play
}

function mpc_stop() {
	mpc stop
}

#####################################################
## MPLAYER METHODS
#####################################################
function mplayer_play() {
	url=$(find_radio_url $1)
	mplayer -cache-min 0 -playlist "$url"
}

function mplayer_stop() {
	killall mplayer
}

#####################################################
## CASTNOW METHODS (For Chromecast)
#####################################################
CASTNOW="$HOME/node_modules/.bin/castnow --device ${CAST_DEVICE}"
function cast_play() {
	url=$(find_radio_url $1)
	if [ "$url" == "" ]; then
		echo "No URL found"
		exit 1
	fi
	if [[ $url == *.pls* ]]; then
		echo "Playlist: $url"
		first_url=$(curl -s http://schizoid.in/schizoid-prog.pls | grep ^File1 | awk -F '=' '{print $2}')
		echo "Found URL: $first_url"
		${CASTNOW} --type=audio/mp3 "$first_url"
	else
		echo "Stream: $url"
		$CASTNOW --type=audio/mp3 "$url"
	fi
}

function cast_stop() {
	echo "Press s in the castnow terminal to stop"
	$CASTNOW
}

if [ "$1" == "stop" ]; then
	"${method}_stop"
else
	echo "Playing $1 via $method"
	"${method}_play" $1
fi
